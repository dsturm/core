.visually-hidden {
  clip: rect(0 0 0 0);
  clip-path: inset(50%);
  height: 1px;
  overflow: hidden;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

.with-icon {
  display: inline-flex;
  align-items: baseline;

  > .icon {
    margin-right: .2em;
    align-self: center;
    margin-top: -1px;
  }
}

// Flexbox and Grid utilities

.justify-center {
  justify-content: center;
}

.justify-end {
  justify-content: flex-end;
}

.grow {
  flex-grow: 1;
}

.hide-icon {
  .icon {
    display: none;
  }
}

.block {
  display: block;
  width: 100%;
}

.inline {
  display: inline;
  vertical-align: middle;
}

.scrollable {
  overflow: auto;
  position: relative;
  -ms-overflow-style: none;
  scrollbar-width: none;

  &::-webkit-scrollbar {
    display: none;
  }
}

// Rotation
.rotate-90 {
  transform: rotate(90deg);
}

.rotate-180 {
  transform: rotate(180deg);
}

.rotate-270 {
  transform: rotate(270deg);
}

// Text Alignment
.text-left {
  text-align: left;
}

.text-center {
  text-align: center;
}

.text-right {
  text-align: right;
}



.ml-auto {
  margin-left: auto;
}

.link {
  cursor: pointer;
  color: var(--color-link);

  &:hover {
    text-decoration: underline;
  }
}

.link--plain {
  &:hover {
    color: var(--color-text);
    text-decoration: none;
  }
}

.clickable {
  &:is(:disabled, .is-disabled) {
    opacity: .5;
    cursor: default;
  }

  &:not(:disabled, .is-disabled) {
    cursor: pointer;

    &:is(
      :hover, .is-hovered,
      :focus, .is-focused,
      [aria-selected=true]
    ) {
      filter: var(--filter-hover);
    }

    &:is(:active, [aria-pressed=true]) {
      filter: var(--filter-active);
    }

    &:active {
      transform: scale(0.97);
    }
  }
}

/*
|--------------------------------------------------------------------------
| Text Styles
|--------------------------------------------------------------------------
*/
.text-danger {
  color: var(--color-danger);
  font-weight: var(--font-weight-bold);
}

.text-unread {
  color: var(--color-unread);
  font-weight: var(--font-weight-bold);
}

.text-success {
  color: var(--color-success);
  font-weight: var(--font-weight-bold);
}

/*
|--------------------------------------------------------------------------
| Text Color
|--------------------------------------------------------------------------
*/
.color-text {
  color: var(--color-text);
}

.color-muted {
  color: var(--color-text-muted);
}

.color-accent {
  color: var(--color-accent);
}

.color-success {
  color: var(--color-success);
}

.color-warning {
  color: var(--color-warning);
}

.color-danger {
  color: var(--color-danger);
}

/*
|--------------------------------------------------------------------------
| Text Size
|--------------------------------------------------------------------------
*/

.text-xxs {
  font-size: var(--text-xxs);
}

.text-xs {
  font-size: var(--text-xs);
}

.text-sm {
  font-size: var(--text-sm);
}

.text-md {
  font-size: var(--text-md);
}

.text-lg {
  font-size: var(--text-lg);
}

.text-xl {
  font-size: var(--text-xl);
}

.text-xxl {
  font-size: var(--text-xxl);
}

.text-xxxl {
  font-size: var(--text-xxxl);
}

/*
|--------------------------------------------------------------------------
| Animation
|--------------------------------------------------------------------------
*/

.animate-shake {
  animation: shake .8s;
}

@keyframes shake {
  10%, 90% {
    transform: translateX(-1px);
  }

  20%, 80% {
    transform: translateX(2px);
  }

  30%, 50%, 70% {
    transform: translateX(-4px);
  }

  40%, 60% {
    transform: translateX(4px);
  }
}

/*
|--------------------------------------------------------------------------
| Background Color
|--------------------------------------------------------------------------
*/

.bg-fill {
  background-color: var(--color-fill);
}

/*
|--------------------------------------------------------------------------
| Interactions
|--------------------------------------------------------------------------
*/

.pointer-events-none {
  pointer-events: none;
}

/*
|--------------------------------------------------------------------------
| JavaScript
|--------------------------------------------------------------------------
*/

.js .no-js-only,
.no-js .js-only {
  display: none !important;
}

.grid {
  display: grid;
  gap: var(--space-md);
  grid-template-columns: repeat(auto-fill, minmax(~"min(var(--grid-min, 15ch), 100%)", 1fr));
}

.rounded {
  border-radius: var(--border-radius);
}

.rounded-full {
  border-radius: 999px;
}

.measure-narrow {
  max-width: 55ch;
}

.full-width {
  width: 100%;
}

.full-height {
  height: 100%;
}

.block-link {
  display: block;
  color: inherit;
  text-decoration: none !important;
  border-radius: var(--border-radius);
  padding: var(--space-md);

  &:hover {
    background: var(--color-fill);
  }

  &:active {
    filter: var(--filter-active);
  }
}

.row {
  display: flex;
  align-items: center;
}

.wrap {
  flex-wrap: wrap;
}

.gap-xxs { gap: var(--space-xxs) }
.gap-xs { gap: var(--space-xs) }
.gap-sm { gap: var(--space-sm) }
.gap-md { gap: var(--space-md) }
.gap-lg { gap: var(--space-lg) }
.gap-xl { gap: var(--space-xl) }
.gap-xxl { gap: var(--space-xxl) }
.gap-xxxl { gap: var(--space-xxxl) }

.stack {
  display: flex;
  flex-direction: column;
}

.justify-between {
  justify-content: space-between;
}

.no-shrink {
  flex-shrink: 0;
}

.overlay-container {
  position: relative;
}

.overlay,
.with-overlay::before {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}

.with-overlay::before {
  content: '';
}

.align-center {
  align-items: center;
}

.align-start {
  align-items: flex-start;
}

.align-end {
  align-items: flex-end;
}

.align-baseline {
  align-items: baseline;
}
